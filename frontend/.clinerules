# コード生成のルールと参照ドキュメント

このファイルは、コード生成の際のガイドラインおよび参照ドキュメントとして機能する `./doc` ディレクトリ内のドキュメント一覧です。各ドキュメントの簡単な説明を付記しています。

> **重要**: このファイルは `.cursorrules` と同期を保つ必要があります。どちらかのファイルを更新する際は、もう一方のファイルも同様に更新してください。

コード生成時に必要に応じてこれらのドキュメントを参照してください。特定のドキュメントの内容を読み込むには、プロジェクトルートからの相対パスを指定して `read_file` ツールを使用してください。

## ドキュメント一覧

- [`doc/ai-code-generation-considerations.md`](doc/ai-code-generation-considerations.md)
  - **要約:** 生成AIによるフロントエンドコード生成の際の考慮事項について説明。コード品質、保守性、セキュリティ、パフォーマンス、ライセンス、プロンプトエンジニアリング、学習と改善に関するガイドラインを提供。生成されたコードは必ずレビューと検証が必要であることを強調。

- [`doc/fe-coding-style.md`](doc/fe-coding-style.md)
  - **要約:** フロントエンドプロジェクトのコーディングスタイルについて定義。可読性、保守性、一貫性などの基本原則、インデント、命名規則、ファイル構造などのコーディングスタイル、React特有のルール、コードレビュープロセスについて詳述。

- [`doc/fe-directory-structure.md`](doc/fe-directory-structure.md)
  - **要約:** フロントエンドプロジェクトの推奨ディレクトリ構造について説明。機能ごとにディレクトリを分け、各機能ディレクトリ内に page, asset, domain ディレクトリを配置する構造を定義。

- [`doc/github-branch-strategy.md`](doc/github-branch-strategy.md)
  - **要約:** フロントエンドプロジェクトのGitHubブランチ戦略について説明。Gitflowベースの戦略を採用し、`main`, `develop`, `feature/*`, `release/*`, `hotfix/*` の各ブランチの役割と運用フロー、Pull Request、コミットメッセージに関する規約を定義。

- [`doc/git-commit-guidelines.md`](doc/git-commit-guidelines.md)
  - **要約:** Gitコミットメッセージのガイドラインについて説明。Conventional Commits 仕様に基づいた構造、Type、Scope、Description、Body、Footer の記述方法、および `git status`, `git diff` による確認方法について詳述。

## コード生成時の必須事項

コード生成を行う前に、必ず以下のドキュメントを全て読み込み、内容を理解してください。

- [`doc/ai-code-generation-considerations.md`](doc/ai-code-generation-considerations.md)
- [`doc/fe-coding-style.md`](doc/fe-coding-style.md)
- [`doc/fe-directory-structure.md`](doc/fe-directory-structure.md)
- [`doc/github-branch-strategy.md`](doc/github-branch-strategy.md)

これらのドキュメントに記載されているガイドライン、コーディングスタイル、ディレクトリ構造、ブランチ戦略などを遵守してコードを生成します。

## コミット処理の自動化

ユーザーが `commit` と指示した場合、以下の手順でコミットメッセージを自動生成し、コミットを実行します。

1. `git status` を実行して変更されたファイルを確認します。
2. `git diff` を実行して具体的な変更内容を取得します。
3. コミットガイドラインを遵守して、
4. 変更内容と `doc/git-commit-guidelines.md` に基づき、Conventional Commits 形式の日本語コミットメッセージを生成します。
5. `git add .` を実行して全ての変更をステージングします。
6. 生成した日本語メッセージを使用して `git commit -m "生成されたコミットメッセージ"` を実行します。
